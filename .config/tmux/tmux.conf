# Defaults
# set -g default-shell "/bin/zsh"
# set -g default-command "$SHELL"
set -g mouse on
set-option -s escape-time 0
set-option -g history-limit 50000
set-option -g display-time 4000
set-option -g status-keys vi
set-option -g focus-events on
# needs: $ tic ~/.config/tmux/tmux.terminfo
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"

# setup leader key
unbind C-b
set -g prefix C-z

# Unlimited scrollback!
set-option -g history-limit 100000

# Screensaver
# set -g lock-after-time 300
# set -g lock-command "cmatrix -C blue"

# Copy to clipboard vim
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key P paste-buffer

# Windows
set-option -g renumber-windows on

# double press C-z to toggle tabs (windows)
bind C-z last-window

# Reorder windows
bind -r C-h swap-window -t -1 # move window one position to the left
bind -r C-l swap-window -t +1 # move window one position to the right

# splitting and creating new windows
bind-key h split-window -v  -c '#{pane_current_path}'
bind-key v split-window -h  -c '#{pane_current_path}'
bind-key n new-window -c '#{pane_current_path}'

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s list-windows\; command-prompt -p "window #: "  "swap-window -t '%%'"

# Panes
# Resize panes
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Break pane into it's own
bind b break-pane -d


# Use up and down arrows for temporary "maximize"
unbind Up; bind Up resize-pane -Z
unbind Down; bind Down resize-pane -Z

# tmux sesh
set -g detach-on-destroy off
bind-key x kill-pane
bind-key "g" display-popup -E -w 40% "sesh connect \"$(
	sesh list -i | gum filter --limit 1 --placeholder 'Pick a sesh' --height 50 --prompt='âš¡'
)\""

# Tmux plugins# vim-tmux-navigator snippet
# See issue https://github.com/christoomey/vim-tmux-navigator/issues/417
is_vim="ps -o tty= -o state= -o comm= | grep -iqE '^#{s|/dev/||:pane_tty} +[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Reload config
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message 'TMUX config reloaded!'

# List of plugins
set -g @plugin 'tmux-plugins/tpm' # Package Manager
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'jaclu/tmux-menus'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'rickstaa/tmux-notify'

# Scripts info config
set -g @info-list "cpu-usage ram_usage time"
set -g @show-timezone false
set -g @show-left-icon session
run "~/.config/tmux/scripts/main.sh"

# tmux-thumbs
set -g @thumbs-command 'echo -n {} | pbcopy'
set -g @thumbs-upcase-command 'echo -n {} | xargs open -g'

# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Run TPM
run '~/.config/tmux/plugins/tpm/tpm'
